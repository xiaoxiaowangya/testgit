//类和对象
//c++面向对象的三大特性为：封装，继承，多态
//c++认为万事万物都皆为对象，对象上有其属性和行为

//封装
//封装的意义
//1、将属性和行为作为一个整体，表现生化中的事物
//2、将属性和行为加以权限控制
//封装的意义一：
//在设计类的时候，属性和行为写在一起，表现事物
//语法：class 类名{  访问权限： 属性  /  行为  };

#include<iostream>
using namespace std;
const double PI=3.14;

//设计一个圆类，求圆周长
class Circle
{
	//访问权限
	//公共权限
	public:

		//属性

		int m_r;

		//行为
		//获取圆的周长
		double calculateZc()
		{
			return 2*PI*m_r;
		}

};

int main()
{
	//通过圆类 创建具体的圆（对象）
	Circle cl;
	//给圆对象的属性进行赋值
	cl.m_r=10;
	cout<<"圆的周长为："<<cl.calculateZc()<<endl;

	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
#include<string>
//设计学生类
class Student
{
public://公共权限
	//属性
	string name;//姓名
	int id;//学号
	//行为
	void showStudent()
	{
		cout<<"姓名："<<name<<endl<<"学号："<<id<<endl;
	}
};
int main()
{
	//创建具体学生 实例化对象
	Student s;

	s.name="张三";
	s.id=1;
	//输出学生信息
	s.showStudent();

	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
#include<string>
//访问权限
//公共权限 public 成员类内可以访问 类外可以访问
//保护权限 protected 成员类内可以访问 类外不可以访问
//私有权限 private 成员类内可以访问类外不可以访问

class person
{	
public://公共权限
	string name;

protected://保护权限
	string car;

private://私有权限
	int password;
public:
	void func()
	{
		name="张三";
		car="拖拉机";
		password=123456;
	}
};
int main()
{
	//实例化对象
	person p;
	p.name="李四";
	//p.car="奔驰";//保护权限内容，类外不可以访问
	//p.password=123;//私有权限内容，类外不可以访问
	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
//struct和class的区别
//struct 默认权限是公共 public
//class 默认权限是私有 private

class C1
{
	int A;//默认权限是私有
};

struct C2
{
	int A;//默认权限是公共
};

int main()
{

	C1 c1;
	//c1.A=100;私有权限不能访问
	C2 c2;
	c2.A=100;
	system("pause");
	return 0;
}


#include<iostream>
using namespace std;
#include<string>
//成员属性设置为私有
//1、可以自己控制读写权限
//2、对于写可以检测数据的有效性

class person
{
public:
	//设置姓名
	void setname(string name)
	{
		m_name=name;
	}
	//获取姓名
	string getname()
	{
		return m_name;
	}
	//获取年龄
	int getage()
	{
		m_age=0;
		return m_age;
	}
private:
	//姓名  可读可写
	string m_name;
	//年龄  只读
	int m_age;
};

int main()
{
	person p;
	p.setname("张三");
	cout<<"姓名："<<p.getname()<<endl;
	cout<<"年龄为："<<p.getage()<<endl;
	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
#include<string>
//成员属性设置为私有
//1、可以自己控制读写权限
//2、对于写可以检测数据的有效性

class person
{
public:
	//设置姓名
	void setname(string name)
	{
		m_name=name;
	}
	//获取姓名
	string getname()
	{
		return m_name;
	}
	//获取年龄
	int getage()
	{
		return m_age;
	}
	//设置年龄  如果想修改，年龄的范围必须是（0~150）之间
	void setage(int age)
	{
		if(age<0||age>150)
		{
			m_age=0;
			cout<<"error!!!"<<endl;
			return;
		}
		m_age=age;
	}

private:
	//姓名  可读可写
	string m_name;
	//年龄  可读可写
	int m_age;

};

int main()
{
	person p;
	p.setname("张三");
	cout<<"姓名："<<p.getname()<<endl;
	p.setage(18);
	cout<<"年龄为："<<p.getage()<<endl;
	system("pause");
	return 0;
}





