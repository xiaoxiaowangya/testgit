//类和对象
//c++面向对象的三大特性为：封装，继承，多态
//c++认为万事万物都皆为对象，对象上有其属性和行为

//封装
//封装的意义
//1、将属性和行为作为一个整体，表现生化中的事物
//2、将属性和行为加以权限控制
//封装的意义一：
//在设计类的时候，属性和行为写在一起，表现事物
//语法：class 类名{  访问权限： 属性  /  行为  };

#include<iostream>
using namespace std;
const double PI=3.14;

//设计一个圆类，求圆周长
class Circle
{
	//访问权限
	//公共权限
	public:

		//属性

		int m_r;

		//行为
		//获取圆的周长
		double calculateZc()
		{
			return 2*PI*m_r;
		}

};

int main()
{
	//通过圆类 创建具体的圆（对象）
	Circle cl;
	//给圆对象的属性进行赋值
	cl.m_r=10;
	cout<<"圆的周长为："<<cl.calculateZc()<<endl;

	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
#include<string>
//设计学生类
class Student
{
public://公共权限
	//属性
	string name;//姓名
	int id;//学号
	//行为
	void showStudent()
	{
		cout<<"姓名："<<name<<endl<<"学号："<<id<<endl;
	}
};
int main()
{
	//创建具体学生 实例化对象
	Student s;

	s.name="张三";
	s.id=1;
	//输出学生信息
	s.showStudent();

	system("pause");
	return 0;
}

#include<iostream>
using namespace std;
#include<string>
//访问权限
//公共权限 public 成员类内可以访问 类外可以访问
//保护权限 protected 成员类内可以访问 类外不可以访问
//私有权限 private 成员类内可以访问类外不可以访问

class person
{	
public://公共权限
	string name;

protected://保护权限
	string car;

private://私有权限
	int password;
public:
	void func()
	{
		name="张三";
		car="拖拉机";
		password=123456;
	}
};
int main()
{
	//实例化对象
	person p;
	p.name="李四";
	//p.car="奔驰";//保护权限内容，类外不可以访问
	//p.password=123;//私有权限内容，类外不可以访问
	system("pause");
	return 0;
}